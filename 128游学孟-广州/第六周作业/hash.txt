哈希？
#什么时哈希
*散列函数或散列算法，又称哈希函数，是一种从任何一种数据中创建小的数字"指纹”的方法。散列函数把消息或数据压缩成摘要，使得数据量变小，
将数据的格式固定下来。该函数将数据打乱混合，重新创建一个叫做散列值的指纹。散列值通常用一个端的随机字母和数字组成的字符串来代表。

1.均值哈希算法
均值哈希算法是一种图像哈希算法，用于将图像转换为一组数字或字符串。它通过图像缩小到特定的大小，并计算缩小后的图像的像素平均值，然后将
每个像素的灰度值与平均值比较，得到一个二进制位序列，从而实现图像的哈希。

均值哈希算法的主要步骤如下：
1.缩放：图像缩放8*8，保留结构，除去细节。
2.灰度化转换为灰度图。
3.求平均值：计算灰度图所有像素的平均值。
4.比较：像素值大于平均值记作1，相反记作0.总共64位。
5.生成hash：将上述步骤生成1和0按顺序组合起来既是图片的指纹（hash）
6.对比指纹：将两幅图的指纹对比，计算汉明距离，即两个64位的hash值有多少位是不一样的，不相同位数越少，图片越相似。

差值哈希算法
差值哈希算法相比较于均值哈希算法，前期和后期基本相同，只有中间比较hash有变化。
1.缩放：图片缩放位8*9，保留结构，除去细节。
2.灰度化：转换为灰度图。
3.比较：像素值大于后一个下个像素记作1，相反记作0，本行不与下一行对比，每行9个像素，八个差值，有8行，总共64位。
4，生产hash:将上述步骤生成的1和0按顺序组合起来既是图片的指纹（hash）。
5.对比指纹：将两幅图的指纹对比，计算汉明距离，即两个64位的hash值有多少位是不一样的，不同位数少，图片越相似。

